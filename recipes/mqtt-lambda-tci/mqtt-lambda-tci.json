{
  "mashling_schema": "1.0",
  "gateway": {
    "name": "MyProxy",
    "version": "1.0.0",
    "display_name":"MQTT FaaS Dispatcher",
    "display_image":"displayImage.svg",
    "description": "This is a simple proxy.",
    "triggers": [
      {
        "name": "MyProxy1",
        "description": "Animals MQTT trigger - PUT animal details",
        "type": "github.com/TIBCOSoftware/mashling/ext/flogo/trigger/mqtt",
        "settings": {
          "broker": "tcp://localhost:1883",
          "id": "flogo",
          "user": "",
          "password": "",
          "store": "",
          "qos": "0",
          "cleansess": "false",
          "tracer": "zipkin",
          "tracerEndpoint": "http://localhost:9411/api/v1/spans",
          "topic": "alert",
          "optimize": "true"
        },
        "handlers": [
          {
            "dispatch": "Pets",
            "settings": {
              "topic": "alert",
              "optimize": "true"
            }
          }
        ]
      }
    ],
    "dispatches": [
      {
        "name": "Pets",
        "routes": [
          {
            "if": "payload.content.type == 'urgent' || payload.content.type == 'critical'",
            "steps": [
              {
                "service": "Call_Field_OPS",
                "input": {
                  "inputs.pathParams": "${payload.pathParams}",
                  "inputs.content": "${payload.content}",
                  "inputs.tracing": "${payload.tracing}"
                }
              }
            ],
            "responses": [
              {
                "error": false,
                "output": {
                  "code": 200,
                  "format": "json",
                  "body": "${Call_Field_OPS.response.outputs.data}"
                }
              }
            ]
          },
          {
            "steps": [
              {
                "service": "Predictive_Maintenance",
                "input": {
                  "inputs.content": "${payload.content}",
                  "inputs.tracing": "${payload.tracing}"
                }
              }
            ],
            "responses": [
              {
                "if": "Predictive_Maintenance.response.outputs.code != 200",
                "error": true,
                "output": {
                  "code": 403,
                  "format": "json",
                  "body": "Pet is not added."
                }
              },
              {
                "if": "Predictive_Maintenance.response.outputs.code == 200",
                "error": false,
                "output": {
                  "code": 200,
                  "format": "json",
                  "body.pet": "${Predictive_Maintenance.response.outputs.data}"
                }
              }
            ]
          }
        ]
      }
    ],
    "services": [
      {
        "name": "Call_Field_OPS",
        "description": "Make PUT calls against a remote HTTP service using a Flogo flow.",
        "type": "flogoFlow",
        "settings": {
          "reference": "github.com/TIBCOSoftware/mashling/lib/flow/MQTTToHTTPFlow.json"
        }
      },
      {
        "name": "Predictive_Maintenance",
        "description": "Make PUT calls against a remote HTTP service using a Flogo flow.",
        "type": "flogoFlow",
        "settings": {
          "reference": "github.com/TIBCOSoftware/mashling/lib/flow/Lambda.json"
        }
      }
    ]
  }
}
